/**
 * Apply a color to the part of the console output that is generated by the logger. This concatenates previous output!
 * @param {Array} result - The initial output args
 * @param {Object} data - The data object with all necessary runtine information
 * @param {Object} data.level - The output's log level object
 * @return {Array} The resulting output args
 */
export function colorize(result, { level }) {
    const { color } = level;
    const styles = color ? `color: ${ color }` : '';

    if (styles) {
        result = [`%c${ result.join(' ') }`, styles];
    }

    return result;
}

/**
 * Prepend the log level label to the output
 * @param {Array} result - The initial output args
 * @param {Object} data - The data object with all necessary runtine information
 * @param {Object} data.level - The output's log level object
 * @return {Array} The resulting output args
 */
export function iconize(result, { level }) {
    const { label } = level;

    if (label) {
        result.unshift(`${ label }`);
    }

    return result;
}

/**
 * Prepend a location to the output if available
 * @param {Array} result - The initial output args
 * @param {Object} data - The data object with all necessary runtine information
 * @param {Object} data.config - The config that the logger was invoked with
 * @return {Array} The resulting output args
 */
export function localize(result, { config }) {
    const { location } = config.context;

    if (location) {
        result.unshift(`[${ location }]`);
    }

    return result;
}
